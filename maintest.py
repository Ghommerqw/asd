# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from collections import UserDict
from telebot import apihelper
from telebot import types
import telebot
import sqlite3

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏
PROXY = 'whop1074:998899@45.145.232.50:61234'
apihelper.proxy = {'https': 'http://' + PROXY}
# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
token = '5904272979:AAEPR8wJa4b-S9Tl1C_s1E_kz5rSpEBhRgs'
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ TeleBot
bot = telebot.TeleBot(token, parse_mode=None)

# –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('users.db')
c = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
c.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        username TEXT UNIQUE NOT NULL,
        password TEXT,
        full_name TEXT,
        user_class TEXT NOT NULL CHECK (class IN ('sotr', 'ok'))
    )
''')

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn.commit()
# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn.close()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ UserDict –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = UserDict()
# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
bot_data = {}
# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.user_data = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—è –≤ –ë–î
def check_credentials(username, password):
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("SELECT * FROM users WHERE username=?", (username,))
    result = c.fetchone()
    conn.close()
    return result is not None and (password is None or result[2] == password)


def get_user(chat_id):
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users WHERE chat_id=?", (chat_id,))
    user = cursor.fetchone()
    conn.close()
    if user:
        return {"id": user[0], "username": user[1], "password": user[2], "full_name": user[3], "chat_id": user[4],
                "user_class": user[5]}
    else:
        return None


def get_users_by_class(user_class):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users WHERE user_class=?", (user_class,))
    rows = cursor.fetchall()
    conn.close()

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = []
    for row in rows:
        user = {"id": row[0], "full_name": row[1], "user_class": row[3]}
        users.append(user)

    return users

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if chat_id in bot.user_data:
        show_menu(chat_id)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ
    bot.user_data[chat_id] = {"username": None}

    def handle_username(message):
        chat_id = message.chat.id
        username = message.text

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥–µ–Ω–æ –≤–µ—Ä–Ω–æ
        if not check_credentials(username, None):
            bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            bot.register_next_step_handler(message, handle_username)
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ
        bot.user_data[chat_id] = {"username": username}

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–∞—Ä–æ–ª—è
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
        bot.register_next_step_handler(message, handle_password)

    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
    bot.register_next_step_handler(message, handle_username)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def handle_password(message):
    chat_id = message.chat.id
    password = message.text
    username = bot.user_data[chat_id]["username"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω–æ
    if not check_credentials(username, password):
        bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        bot.register_next_step_handler(message, handle_password)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    bot.user_data[chat_id]["password"] = password

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    bot.send_message(chat_id, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    show_menu(chat_id)


def show_menu(chat_id):
    if chat_id not in bot.user_data:
        bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, –≤–≤–µ–¥—è /start.")
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    btn2 = types.KeyboardButton("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã üìû")
    btn3 = types.KeyboardButton("–í—ã—Ö–æ–¥ üîí")
    btn4 = types.KeyboardButton("–ó–∞–ø—Ä–æ—Å")
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ó–∞–ø—Ä–æ—Å")
def handle_query(message):
    chat_id = message.chat.id
    user = get_user(chat_id)
    print(f"user: {user}")
    if user is not None and has_access_to_query(user):
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞")
        btn2 = types.KeyboardButton("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –±–æ–ª—å–Ω–∏—á–Ω–æ–≥–æ")
        markup.add(btn1, btn2)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:", reply_markup=markup)
        bot.register_next_step_handler(message, handle_query_selection)
    else:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤
        bot.send_message(chat_id, "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.")

def has_access_to_query(user):
    if user["user_class"] == "sotr":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
        return user.get("has_access_to_query", False)
    elif user["user_class"] == "ok":
        # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤ –Ω–µ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
        return False
    else:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ –æ–Ω –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
        return False



def handle_query_selection(message):
    chat_id = message.chat.id
    user = get_user(chat_id)
    if has_access_to_query(user):
        if message.text == "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞":
            function = "—Ä–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç"
        elif message.text == "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –±–æ–ª—å–Ω–∏—á–Ω–æ–≥–æ":
            function = "—Ä–∞—Å—á–µ—Ç –±–æ–ª—å–Ω–∏—á–Ω–æ–≥–æ"
        else:
            bot.send_message(chat_id, "–û—à–∏–±–∫–∞. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
        send_request(chat_id, user["full_name"], user["user_class"], function)
    else:
        bot.send_message(chat_id, "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.")


def send_request(message, full_name, user_class, function):
    chat_id = message.chat.id
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤
    ok_users = get_users_by_class("ok")
    if len(ok_users) == 0:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞. –ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤.")
        return
    # –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
    sotr_users = get_users_by_class("sotr")
    if len(sotr_users) == 0:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞. –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è.")
        return
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
    director_users = get_users_by_class("director")
    if len(director_users) == 0:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞. –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è.")
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_class == "sotr":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤
        request_text = f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {full_name} –∏–∑ –∫–ª–∞—Å—Å–∞ {user_class} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç {function}."
        for ok_user in ok_users:
            bot.send_message(ok_user["chat_id"], request_text)

        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤
        bot.send_message(chat_id, "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤.")
    elif user_class == "director":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤—Å–µ–º —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º
        request_text = f"–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å {full_name} –∏–∑ –∫–ª–∞—Å—Å–∞ {user_class} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç {function}."
        for director_user in director_users:
            bot.send_message(director_user["chat_id"], request_text)

        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
        bot.send_message(chat_id, "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π.")
    else:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞. –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å"
@bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ—Ñ–∏–ª—å')
def handle_profile(message):
    chat_id = message.chat.id
    if chat_id not in bot.user_data:
        bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, –≤–≤–µ–¥—è /start.")
        return
    username = bot.user_data[chat_id]["username"]
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("SELECT full_name, user_class FROM users WHERE username=?", (username,))
    full_name, user_class = c.fetchone()
    conn.close()
    if user_class == 'sotr':
        bot.send_message(chat_id, f"–í—ã - —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è\n–í–∞—à–µ –§–ò–û: \n{full_name}")
    elif user_class == 'ok':
        bot.send_message(chat_id, f"–í—ã - —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤\n–í–∞—à–µ –§–ò–û: \n{full_name}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
@bot.message_handler(func=lambda message: message.text == '–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã üìû')
def handle_contacts(message):
    chat_id = message.chat.id
    if chat_id not in bot.user_data:
        bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, –≤–≤–µ–¥—è /start.")
        return
    bot.send_message(message.chat.id,
                     "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (863) 285-61-89\n–ê–¥—Ä–µ—Å: –°—Ç–µ–ø–Ω–∞—è —É–ª., 16/1, –í–æ–ª–≥–æ–¥–æ–Ω—Å–∫\n–ù–∞—à —Å–∞–π—Ç: https://vpolesye.ru")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥"
@bot.message_handler(func=lambda message: message.text == '–í—ã—Ö–æ–¥ üîí')
def handle_exit(message):
    chat_id = message.chat.id
    # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
    if chat_id in bot.user_data:
        del bot.user_data[chat_id]
    bot.send_message(chat_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏, –Ω–∞–ø–∏—à–∏—Ç–µ /start")


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn.close()
